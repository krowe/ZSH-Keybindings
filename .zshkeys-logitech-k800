#################################
########## KEYBINDINGS ##########

## BEGIN BASIC CONFIGURATION

# This is the GMail ID which you will use for the mail check. This requires that
# you to enable the ATOM feed in Gmail. If you don't know what that is then go
# ahead and try this and let it fail. There will then be a message in your
# inbox you can read with instruction on how to enable it. 

# YourEmailID should be replaced with your email ID (the portion of your 
# email before the @ sign).
EmailID="YourEmailID"

# If you'd like to see advanced MySQL stats when you press F7 then ensure that
# mysqladmin is installed (`apt-get install mysql-admin`) and make a new file in your home directory called:
# ~/.my.cnf which contins the following information:

## [client]
## user="your_mysql_username"
## password="your_mysql_password"
## host="your_mysql_hostname"

# This will provide default information for mysql clients including mysqladmin.

# If you would like to use the system restart and shutdown commands without 
# typing a password (which works best with this) then you'll need to edit your
# visudo file (sudo visudo) and add the following near the end:

## username   ALL=(ALL) NOPASSWD: /sbin/reboot, /sbin/poweroff

# Replacing username with your linux login name.

# To use different keys than are defined you'll need to scroll down to where it 
# says, 'Bind Definitions' later in this file.

## END BASIC CONFIGURATION


# Ensure we are in emacs mode
bindkey -e

#################
# Keybind Scripts

_check-gmail() {
	zle -I 
	(
		curl -u $EmailID --silent "https://mail.google.com/mail/feed/atom"|
			tr -d '\n'| awk -F '<entry>' '{for (i=2; i<=NF; i++) {print $i}}'|
			sed -n "s/<title>\(.*\)<\/title.*name>\(.*\)<\/name>.*/\2 - \1/p"|
			sed 's/&#34;/"/g'|
			sed "s/&#38;/&/g"|
			sed "s/&#39;/'/g"|
			sed "s/&#60;/</g"|
			sed "s/&#62;/>/g"|
			_colorize_mail
	) < /dev/tty
}
zle -N _check-gmail

# This displays various information about the system. I'm sure everyone will
# have their own ideas about what is best for this. Go ahead and put them in.
_system_status_display() {
	zle -I 
	(
		echo -e "Information for `hostname|_colr 31` @ `ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'|_colr 31`"
		echo -e "`lsb_release -ds|_colr 35` using `uname -o|_colr 35` `uname -r|_colr 35` on a `uname -m|_colr 35` processor."
		echo -e "Today is `date --rfc-3339=seconds|_colr 32`; up since `uptime -s|_colr 32`."
		echo -e "Active Users: `w|cut -d' ' -f1|tail -n+3|sort -u|_colrl 34 36|tr '\n' ','|sed -e 's/,$//'`\e[0m"
		echo
		info=$(df -mh)
		echo $info|head -n 1|_colr 33 && echo && echo $info|tail -n +3|_colrl 34 36
		echo
		info=$(free -mht)
		echo -n "            " && echo $info|head -n 1|_colr 33 && echo && echo $info|tail -n +2|_colorize_mail ":" "\e[1;33m"
		info=$()
		echo
		if [ -f "/etc/init.d/apache2" ]; then
			if [[ `service apache2 status` == *running* ]]; then
				echo -en "\e[32m*\e[0m \e[33mApache 2\e[0m is \e[32mrunning.\e[0m"
			else
				echo -en "\e[39m*\e[0m \e[33mApache 2\e[0m is \e[31mstopped.\e[0m"
			fi
			echo -e " Sites: `ls /etc/apache2/sites-enabled|sed 's/.conf//'|_colrl 34 36|tr '\n' ','|sed -e 's/,$//'`\e[0m"
		else
			echo -e "\e[35m*\e[0m \e[33mApache 2\e[0m doesn't apear to be installed."
		fi
		if [ -f "/etc/init.d/mysql" ]; then
			if [[ `service mysql status` == *running* ]]; then
				echo -en "\e[32m*\e[0m \e[33mMySQL\e[0m is \e[32mrunning\e[0m. "
				if [[ -f ~/.my.cnf  && -e /usr/bin/mysqladmin ]]; then
				   /usr/bin/mysqladmin status|sed 's/: /:/g'|sed 's/  / /g'|sed 's/Uptime/Up/'|sed 's/Threads/Th/'|sed 's/Questions/Qu/'|sed 's/Slow queries/SQ/'|sed 's/Opens/Op/'|sed 's/Flush tables/FT/'|sed 's/Open tables/OT/'|sed 's/Queries per second avg/QPS/'
				else
				   echo -e " Create a '~/.my.cnf' file in order to show stats."
				fi
			else
				echo -e "\e[31m*\e[0m \e[33mMySQL\e[0m is \e[31mstopped\e[0m."
			fi
		else
			echo -e "\e[35m*\e[0m \e[33mMySQL\e[0m doesn't apear to be installed."
		fi
	) < /dev/tty
}
zle -N _system_status_display

# This will restart the system.
_key_restart() {
	_key_shutdown_base reboot
}
zle -N _key_restart

# This will shutdown the system.
_key_shutdown() {
	_key_shutdown_base
}
zle -N _key_shutdown

# This just remind me that this button is useless.
_key_numlock() {
	zle -I 
	(
		echo -e "Num Lock Pressed\a"
	) < /dev/tty
}
zle -N _key_numlock

# These allow the F9 and F10 keys to work without loosing your place.
_key_service_mysql_stop() {
	zle -I 
	(
		sudo service mysql stop
	) < /dev/tty
}
zle -N _key_service_mysql_stop
_key_service_mysql_restart() {
	zle -I 
	(
		sudo service mysql restart
	) < /dev/tty
}
zle -N _key_service_mysql_restart

_key_service_apache_stop() {
	zle -I 
	(
		sudo service apache2 stop
	) < /dev/tty
}
zle -N _key_service_apache_stop
_key_service_apache_restart() {
	zle -I 
	(
		sudo service apache2 restart
	) < /dev/tty
}
zle -N _key_service_apache_restart


###################
# Bind Definitions

# Keypad
# 0 . Enter
bindkey -s "^[Op" "0"
bindkey -s "^[On" '.'
bindkey -s "^[OM" "^M"
# 1 2 3
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
# 4 5 6
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
# 7 8 9
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
# + -  * /
bindkey -s "^[Ol" "+"
bindkey -s "^[OS" "-"
bindkey -s "^[OR" "*"
bindkey -s "^[OQ" "/"

# Home End PgUp PgDown Del Ins
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[5~" beginning-of-history
bindkey "\e[6~" end-of-history
bindkey "\e[3~" delete-char
bindkey "\e[2~" overwrite-mode

# Ctrl+Left Ctrl+Right
bindkey "^[[D" backward-word
bindkey "^[[C" forward-word

# F1 - Clear the input buffer
bindkey "^[[11~" kill-buffer

# F2 \ Shift+F2 - Display Unread Email \ Show New Facebook Posts
bindkey "^[[12~" _check-gmail

# F3 \ Shift+F3 - Locate \ Find
bindkey -s "^[[13~" "^ulocate "
bindkey -s "^[[25~" "^ufind / -name  2> /dev/null^b^b^b^b^b^b^b^b^b^b^b^b^b"

# F4 \ Shift+F4 - zsh shell \ exit shell
bindkey -s "^[[14~" "^uecho 'Shell Depth: `expr $SHLVL + 1`' && zsh^M"
bindkey -s "^[[26~" "^uecho 'Shell Depth: `expr $SHLVL - 1`' && exit^M"

# The history search keys allow you to begin typing and then use these to search
# for other lines like what you've typed.
# F5 \ Shift F5 - History Search Up \ History Search Down
bindkey "^[[15~" history-beginning-search-backward
bindkey "^[[28~" history-beginning-search-forward

# F6 - Repeat last command using sudo this time \ Switch to super user
bindkey -s "^[[17~" "^usudo !!^M"
bindkey -s "^[[29~" "^usu -^M"

# F7 \ Shift + F7 - Disk,Mem,Net Status \ ps -aux|grep 
bindkey "^[[18~" _system_status_display
bindkey -s "^[[31~" "^ups -aux|grep "

# F8 \ Shift + F8 - Restart Machine
bindkey "^[[19~" _key_restart
bindkey "^[[32~" _key_shutdown

# On my keyboard the last 4 function keys are all related to playing music.
# Because I run in a VM that is not something I needed. What I could use are
# keys for controlling my two main services. Maybe not the best use of these 
# keys but until I think of something better to use them for, it'll do.

# F9\Shift F9 - MySQL Restart\Stop
bindkey "^[[20~" _key_service_mysql_restart
bindkey "^[[33~" _key_service_mysql_stop

# F10\Shift F10 - Apache 2 Restart\Stop
bindkey "^[[21~" _key_service_apache_restart
bindkey "^[[34~" _key_service_apache_stop

# My keyboard doesn't allow shift modifiers for the F11 and F12 keys whats more,
# the same as Shift+F1 and Shift+F2 are exactly the same keys as F11 and F12.
# With this in mind I've selected (hopefully) complimentary tasks for these keys.

# F11 - Delete Current Word Under the Cursor
bindkey "^[[23~" kill-word

# F12 - Clear the Screen
bindkey "^[[24~" clear-screen

# I don't actually use this key myself but maybe you will.
# NumLock - Network Information
bindkey -s "^[[OP~" "^unetstat -a^M"

# The other keys which didn't work are not intercepted by the terminal at all
# and the host OS receives instead. That is handiest for me as well.

##########################
# Keybind Helper Functions
_colr() {
	read line
	echo -en "\e[1;$1m$line\e[0m"
}
_colrl() {
	while read line
	do
		if [ ! -z "$line" ]; then
			echo -e "\e[1;$1m$line\e[0m"
			read line
			if [ ! -z "$line" ]; then
				echo -e "\e[1;$2m$line\e[0m"
			fi
		fi
	done
}
_colorize_mail() {
    DELIMINATOR=${1:-"-"}
    CA=${2:-"\e[1;34m"}
    CB=${3:-"\e[1;30m"}
	while read line
	do
		var1=$(echo $line | cut -f1 -d$DELIMINATOR)
		var2=$(echo $line | cut -f2- -d$DELIMINATOR)
		echo -e "$CA$var1$CB$var2\e[0m"
	done
}
_key_shutdown_base() {
	name=${1:-"shut down"}
	cmdname=${1:-"poweroff"}
	if [[ "$name" == "reboot" ]]; then name=" restart "; fi
	echo -e "\a\n\e[31m*******************************************"
	echo -e "** \e[33mYou have pressed the $name button \e[31m**"
	echo -e "*******************************************\e[0m"
	for i in {5..1}; do
		echo -en "\nPress \e[33m^C\e[0m in the next \e[31m$i\e[0m seconds to cancel"
		sleep 1s
	done
	echo
	sudo /sbin/$cmdname
}
